@inherits MyAdminPage
@functions{
    private FieldExtractor<PP_Lang> field = new FieldExtractor<PP_Lang>();
    private List<PP_Lang> items = null;
}
@{
    CheckAuthen()();
    var urlQuery = Request.Url.Query;

    if (IsPost && urlQuery == "?delete")
    {
        new Func<Action>(() =>
        {
            try
            {
                AntiForgery.Validate();

                int itemId;
                if (!int.TryParse(Request.Form[field.GetName(t => t.Id)], out itemId))
                {
                    return AjaxResult.BadRequest();
                }

                var item = Db.GetOne<PP_Lang>(itemId);
                if (item == null)
                {
                    return AjaxResult.NotFound();
                }

                Db.Delete<PP_Lang>(item.Id);
                return AjaxResult.Ok(Text[$"Item [{item.Title}] has been deleted!", $"Mục [{item.Title}] đã được xóa!"]);

            }
            catch (Exception ex)
            {
                return AjaxResult.Fail(ex.Message);
            }
        })()();
    }
    else if(IsPost && urlQuery == "?setlang")
    {
        new Func<Action>(() =>
        {
            try
            {
                AntiForgery.Validate();

                int itemId;
                if (!int.TryParse(Request.Form[field.GetName(t => t.Id)], out itemId))
                {
                    return AjaxResult.BadRequest();
                }

                var item = Db.GetOne<PP_Lang>(itemId);
                if (item == null)
                {
                    return AjaxResult.NotFound();
                }

                LangIdCompose = item.LangId;
                return AjaxResult.Ok(Text[$"The [{item.LangId}] ({item.Title}) has become composing language!", $"Ngôn ngữ [{item.LangId}] ({item.Title}) đã trở thành ngôn ngữ soạn thảo!"]);


            }
            catch (Exception ex)
            {
                return AjaxResult.Fail(ex.Message);
            }
        })()();
    }

    string groupType = Request.QueryString["type"];
    if (!Constants.GroupTypeOptionsVI.Values.Contains(groupType))
    {
        groupType = string.Empty;
    }

    Page.Title = Text["LANGUAGES", "DANH SÁCH NGÔN NGỮ"];
    Page.Menu = groupType;
    items = Db.GetList<PP_Lang>();
}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            @RenderPage($"{Constants.Admin_Url}/_share/_breadcrum.cshtml", new { CurrentBreadcrumb = "Danh sách ngôn ngữ" })
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card-box table-responsive">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a href="#list" data-toggle="tab" aria-expanded="true" class="nav-link active">
                            <i class="fas fa-list-ol"></i> @Text["List of languages", "Danh sách ngôn ngữ"]
                        </a>
                    </li>
                    @*<li class="nav-item">
                        <a href="@Constants.Admin_Url/i18n/create" aria-expanded="false" class="nav-link">
                            <i class="fas fa-plus-circle"></i> @Text["Create new one", "Thêm mới"]
                        </a>
                    </li>*@
                </ul>
                <div class="tab-content">
                    <div class="tab-pane show active" id="list">
                        <table id="datatable" class="table table-striped table-bordered dt-responsive" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                            <thead>
                                <tr>
                                    <th style="min-width: 230px; width: 40%;">@Text[field.GetTitle(t => t.LangId)]</th>
                                    <th>@Text[field.GetTitle(t => t.Title)]</th>
                                    <th style="width:1%;min-width:160px;">@Text[field.GetTitle(t => t.DateFormat)]</th>
                                    <th style="width:1%;min-width:160px;">@Text[field.GetTitle(t => t.TimeFormat)]</th>
                                    <th style="width:1%;min-width:80px;">@Text[field.GetTitle(t => t.Enabled)]</th>
                                    <th style="width:1%;min-width:80px;">@Text["Control", "Thao tác"]</th>
                                </tr>
                            </thead>

                            <tbody>
                                @for (int i = 0; i < items.Count; i++)
                                {
                                    <tr>
                                        <td style="min-width: 230px; width: 20%;">
                                            <b>@(i + 1).</b> @items[i].LangId
                                            <span class='badge badge-success badge-pill'>@(items[i].LangId == LangIdCompose ? Text["Composing language", "Ngôn ngữ soạn thảo"] : string.Empty)</span>
                                            <span class='badge badge-danger badge-pill'>@(items[i].IsPrimary? Text["Default", "Mặc định"] : string.Empty)</span>
                                        </td>
                                        <td align="center">@items[i].Title</td>
                                        <td align="center">@Html.Raw(items[i].DateFormat)</td>
                                        <td align="center">@Html.Raw(items[i].TimeFormat)</td>
                                        <td align="center">@Html.Raw(items[i].Enabled)</td>
                                        <td align="center">
                                            <div class="btn-group btn-group-sm">

                                                <a title="@Text["Select as composing language", "Chọn làm ngôn ngữ soạn thảo"]" href="javascript:lang(@items[i].Id)" type="button" class="btn btn-primary @(items[i].LangId == LangIdCompose ? "disabled" : string.Empty)">
                                                    <span class="mdi mdi-check-bold"></span>
                                                </a>
                                                @*<a title="@Text["Edit", "Hiệu chỉnh"]" href="@Constants.Admin_Url/i18n/edit?id=@items[i].Id" type="button" class="btn btn-warning">
                                                    <span class="mdi mdi-pencil"></span>
                                                </a>

                                                <a title="@Text["Delete", "Xóa"]" href="javascript:delele(@items[i].Id)" type="button" class="btn btn-danger">
                                                    <span class="mdi mdi-delete"></span>
                                                </a>*@
                                            </div>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div> <!-- end row -->
    <!-- end row -->
</div>

@section head{
    <!-- third party css -->
    <link href="@Constants.Admin_Url/assets/libs/datatables/dataTables.bootstrap4.css" rel="stylesheet" type="text/css" />
    <link href="@Constants.Admin_Url/assets/libs/datatables/buttons.bootstrap4.css" rel="stylesheet" type="text/css" />
    <link href="@Constants.Admin_Url/assets/libs/datatables/responsive.bootstrap4.css" rel="stylesheet" type="text/css" />
    <link href="@Constants.Admin_Url/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
}

@section scripts{
    <script src="@Constants.Admin_Url/assets/libs/datatables/jquery.dataTables.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/datatables/dataTables.responsive.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/datatables/responsive.bootstrap4.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script>
        function delele(id) {
            Swal.fire({
                title: '@Html.Raw(Text["Confirm to delete!","Hãy xác nhận?"])',
                text: '@Html.Raw(Text["Delete operation cannot be undone","Thao tác xóa không thể hoàn tác"])',
                type: "warning",
                showCancelButton: !0,
                confirmButtonText: '@Html.Raw(Text["OK","Được"])',
                cancelButtonText: '@Html.Raw(Text["Wait!","Khoan!"])',
                confirmButtonClass: "btn btn-success mt-2",
                cancelButtonClass: "btn btn-danger ml-2 mt-2",
                buttonsStyling: !1
            }).then(function(t) {
                t.value?$.ajax({
                    url: "@Constants.Admin_Url/lang?delete",
                    type: "POST",
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    data: { __RequestVerificationToken: '@AntiForgeryTokenForAjaxPost()', Id: id },
                    success: function(result) {
                        Swal.fire({
                            title: '@Html.Raw(Text["Congratulation!", "Chúc mừng!"])',
                            text: result,
                            type: "success"
                        }).then(function(t) { location.reload(); })
                    },
                    error: function(errormessage) {
                        Swal.fire({
                            title: '@Html.Raw(Text["Oh, no!", "Thôi xong!"])',
                            text: errormessage.responseText,
                            type: "error"
                        })
                    }
                }):{}
            });
        }

        function lang(id) {
            $.ajax({
                url: "@Constants.Admin_Url/lang?setlang",
                type: "POST",
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: { __RequestVerificationToken: '@AntiForgeryTokenForAjaxPost()', Id: id },
                success: function(result) {
                    Swal.fire({
                        title: '@Html.Raw(Text["Congratulation!", "Chúc mừng!"])',
                        text: result,
                        type: "success"
                    }).then(function(t) { location.reload(); })
                },
                error: function(errormessage) {
                    Swal.fire({
                        title: '@Html.Raw(Text["Oh no!", "Thôi xong!"])',
                        text: errormessage.responseText,
                        type: "error"
                    })
                }
            })
        }

        $(document).ready(function() {
            jQuery.extend(jQuery.fn.dataTableExt.oSort,{
                "formatted-num-pre": function(a) {
                    a=(a==="-"||a==="")?0:a.replace(/[^\d\-\.]/g,"");
                    return parseFloat(a);
                },
                "formatted-num-asc": function(a,b) {
                    return a-b;
                },
                "formatted-num-desc": function(a,b) {
                    return b-a;
                }
            });

            $('#datatable').DataTable({
                "aaSorting": [],
                "columnDefs": [{ type: 'formatted-num',targets: 0 }],
                "pageLength": 100,
                "lengthChange": false,
            });
        });
    </script>
}