@inherits MyAdminPage
@functions{
    private FieldExtractor<PP_Lang> field = new FieldExtractor<PP_Lang>();
    private PP_Lang model = null;

    private Action ProcessPost()
    {
        AntiForgery.Validate();

        Validation.RequireField(field.GetName(t => t.Title), Text["The title can not be empty!", "Tiêu đề không thể để trống!"]);

        model.LangId = Request.Form[field.GetName(t => t.LangId)].NullIfWhiteSpace();
        model.Title = Request.Form[field.GetName(t => t.Title)].NullIfWhiteSpace();
        model.DateFormat = Request.Form[field.GetName(t => t.DateFormat)].NullIfWhiteSpace();
        model.TimeFormat = Request.Form[field.GetName(t => t.TimeFormat)].NullIfWhiteSpace();
        model.Enabled = Request.Form[field.GetName(t => t.Enabled)].AsBool();

        if (!Validation.IsValid())
        {
            return EmptyAction;
        }

        Db.Update<PP_Lang>(model);
        Root.ReloadLangs();
        return () => Response.Redirect($"{Constants.Admin_Url}/i18n");
    }
}
@{
    CheckAuthen()();
    int itemId;
    if (!int.TryParse(Request.QueryString[field.GetName(t => t.Id)], out itemId))
    {
        Response.Redirect($"{Constants.Admin_Url}/i18n");
    }

    model = Db.GetOne<PP_Lang>(itemId);

    if (model == null)
    {
        Response.Redirect($"{Constants.Admin_Url}/lang");
    }

    if (IsPost)
    {
        try
        {
            ProcessPost().Invoke();
        }
        catch (Exception ex)
        {
            ModelState.AddFormError(ex.Message);
        }
    }

    Page.Title = Text["MODIFY A LANGUAGE", "HIỆU CHỈNH NGÔN NGỮ"];
    Page.Menu = "i18n";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            @RenderPage($"{Constants.Admin_Url}/_share/_breadcrum.cshtml", new { CurrentBreadcrumb = "Danh sách ngôn ngữ" })
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card-box table-responsive">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a href="@Constants.Admin_Url/i18n" aria-expanded="true" class="nav-link">
                            <i class="fas fa-list-ol"></i> @Text["List of languages", "Danh sách ngôn ngữ"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#edit" data-toggle="tab" aria-expanded="false" class="nav-link active">
                            <i class="fe-edit"></i> @Text["Modify a language", "Hiệu chỉnh ngôn ngữ"]
                        </a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane show active" id="edit">
                        <form class="form-horizontal validable" role="form" method="post">
                            @AntiForgery.GetHtml()

                            @if (ModelState.Any())
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary(Text["Operation failed!", "Thao tác không thành công!"], excludeFieldErrors: false, htmlAttributes: null)
                                </div>
                            }

                            @MyHtml.TextBoxFor(field[t => t.LangId], value: model.LangId)
                            @MyHtml.TextBoxFor(field[t => t.Title], value: model.Title)
                            @MyHtml.TextBoxFor(field[t => t.DateFormat], value: model.DateFormat)
                            @MyHtml.TextBoxFor(field[t => t.TimeFormat], value: model.TimeFormat)                         
                            @MyHtml.RadioFor(field[t => t.Enabled], value: model.Enabled)
                            <hr />

                            <div class="form-group mb-0">
                                <div>
                                    <button type="submit" class="btn btn-gradient waves-effect waves-light">
                                        @Text["Submit", "Xác nhận"]
                                    </button>
                                    <button type="button" class="btn btn-light waves-effect ml-1" onclick="window.history.back()">
                                        @Text["Back", "Quay lại"]
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div> <!-- end row -->
    <!-- end row -->
</div>

@section head{
    <link href="@Constants.Admin_Url/codemirror/lib/codemirror.css" rel="stylesheet" type="text/css" />
}

@section scripts{
    <script src="@Constants.Admin_Url/ckfinder/ckfinder.js" type="text/javascript"></script>
    <script src="@Constants.Admin_Url/assets/libs/parsleyjs/parsley.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            $(document).on("click",".btn-ckfinder-popup",function(e) {
                event.preventDefault();
                var targetId=$(this).attr('target');

                window["callback_"+targetId]=function(fileUrl) {
                    $('#'+targetId).val(fileUrl.replace(window.location.origin,''))
                }

                CKFinder.popup({
                    chooseFiles: true,
                    width: 800,
                    height: 600,
                    selectActionFunction: window["callback_"+targetId]
                });
            });
            $(".validable").parsley();
        });
    </script>
}