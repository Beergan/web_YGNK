@inherits MyAdminPage
@functions{
    private FieldExtractor<PP_Category> field = new FieldExtractor<PP_Category>();
    private PP_Category model = null;

    private Action ProcessPost()
    {
        AntiForgery.Validate();
        model.ImageUrl = Request.Form[field.GetName(t => t.ImageUrl)].NullIfWhiteSpace();

        if (!Validation.IsValid())
        {
            ModelState.AddFormError("Dữ liệu không hợp lệ!");
            return EmptyAction;
        }

        Db.Update<PP_Category>(model);
        Root.ClearCache();
        return () => Response.Redirect($"{Constants.Admin_Url}/category");
    }
}
@{
    CheckAuthen()();
    int itemId;
    if (!int.TryParse(Request.QueryString[field.GetName(t => t.Id)], out itemId))
    {
        Response.Redirect($"{Constants.Admin_Url}/category");
    }

    model = Db.GetOne<PP_Category>(itemId);

    if (model == null)
    {
        Response.Redirect($"{Constants.Admin_Url}/category");
    }

    if (IsPost)
    {
        try
        {
            ProcessPost().Invoke();
        }
        catch (Exception ex)
        {
            ModelState.AddFormError(ex.Message);
        }
    }

    Page.Title = Text["MODIFY A CATEGORY", "HIỆU CHỈNH CHUYÊN MỤC"];
    Page.Menu = "category";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            @RenderPage($"{Constants.Admin_Url}/_share/_breadcrum.cshtml", new { CurrentBreadcrumb = "Danh sách chuyên mục" })
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card-box table-responsive">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a href="@Constants.Admin_Url/category" aria-expanded="true" class="nav-link">
                            <i class="fas fa-list-ol"></i> @Text["List of categories", "Các chuyên mục"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#edit" data-toggle="tab" aria-expanded="false" class="nav-link active">
                            <i class="fas fa-plus-circle"></i> @Text["Upload image", "Upload ảnh"]
                        </a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane show active" id="edit">
                        <form class="form-horizontal validable" role="form" method="post">

                            @AntiForgery.GetHtml()

                            @if (ModelState.Any())
                            {
                                <div class="alert alert-danger" role="alert">
                                    @Html.ValidationSummary("Thao tác không thành công!", excludeFieldErrors: true, htmlAttributes: null)
                                </div>
                            }

                            @MyHtml.TextBoxFor(field[t => t.Title], value: model.Title, disabled: true)
                            @MyHtml.ImagePickerFor(field[t => t.ImageUrl], value: model.ImageUrl)
                            <hr />

                            <div class="form-group mb-0">
                                <div>
                                    <button type="submit" class="btn btn-gradient waves-effect waves-light">
                                        @Text["Submit", "Xác nhận"]
                                    </button>
                                    <button type="button" class="btn btn-light waves-effect ml-1" onclick="window.history.back()">
                                        @Text["Back", "Quay lại"]
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section head{
}

@section scripts{
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/speakingurl/6.0.0/speakingurl.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/stringtoslug/jquery.stringtoslug.min.js"></script>
    <script src="@Constants.Admin_Url/ckfinder/ckfinder.js" type="text/javascript"></script>
    <script src="@Constants.Admin_Url/assets/libs/parsleyjs/parsley.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            $(document).on("click",".btn-ckfinder-popup",function(e) {
                event.preventDefault();
                var targetId=$(this).attr('target');

                window["callback_"+targetId]=function(fileUrl) {
                    var url = new URL(fileUrl);
                    $('#'+targetId).val(url.pathname);
                    $('#img-'+targetId).attr("src", url.pathname);
                }

                CKFinder.popup({
                    chooseFiles: true,
                    width: 800,
                    height: 600,
                    selectActionFunction: window["callback_"+targetId]
                });
            });

            $(".validable").parsley();
        });

    </script>
}