@inherits MyAdminPage
@functions{
    private FieldExtractor<PP_Order> field = new FieldExtractor<PP_Order>();
}
@{
    CheckAuthen()();
    var query = Request.Url.Query;
    var dbQuery = Db.Query<PP_Order>();
    if (IsPost && query == "?delete")
    {
        new Func<Action>(() =>
        {
            try
            {
                AntiForgery.Validate();

                int itemId;
                if (!int.TryParse(Request.Form[field.GetName(t => t.Id)], out itemId))
                {
                    return AjaxResult.BadRequest();
                }

                var item = Db.GetOne<PP_Order>(itemId);
                if (item == null)
                {
                    return AjaxResult.NotFound();
                }

                Db.Delete<PP_Order>(item.Id);
                return AjaxResult.Ok(Text[$"Item [{item.OrderCode}] has been deleted!", $"Đơn [{item.OrderCode}] đã được xóa!"]);

            }
            catch (Exception ex)
            {
                return AjaxResult.Fail(ex.Message);
            }
        })()();
    }
    if (query == "?update_status")
    {
        int id = Request.Form[nameof(id)].AsInt();
        string status = Request.Form[nameof(status)];
        string note = Request.Form[nameof(note)];

        var order = Db.GetOne<PP_Order>(id);
        order.OrderStatus = status;
        order.Note = note;
        Db.Update<PP_Order>(order);

        AjaxResult.Ok("Thông tin đã được ghi nhận!")();
    }
    else if (query == "?get-order-details")
    {
        Response.Write("OK");
        Response.End();
    }
    else if (query == "?delivering")
    {
        dbQuery = dbQuery = dbQuery.Where(t => t.OrderStatus == "DELIVERING");
    }
    else if (query == "?cancelled")
    {
        dbQuery = dbQuery.Where(t => t.OrderStatus == "CANCELLED");
    }
    else if (query == "?success")
    {
        dbQuery = dbQuery.Where(t => t.OrderStatus == "SUCCESS");
    }
    else if (query == "?all")
    {
    }
    else
    {
        dbQuery = dbQuery.Where(t => t.OrderStatus == "NEW");
    }

    var items = dbQuery.ToList();

    Page.Title = Text["LIST OF ORDERS", "DANH SÁCH ĐƠN HÀNG"];
    Page.Menu = "order";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            @RenderPage($"{Constants.Admin_Url}/_share/_breadcrum.cshtml", new { CurrentBreadcrumb = "Danh sách đơn hàng" })
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card-box table-responsive">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a href="?new" aria-expanded="true" class="nav-link @(query=="?new"||query==string.Empty?"active":string.Empty)">
                            <i class="fas fa-list-ol"></i> @Text["Đơn hàng mới"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="?delivering" aria-expanded="true" class="nav-link @(query=="?delivering"?"active":string.Empty)">
                            <i class="fas fa-list-ol"></i> @Text["Đơn đang giao"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="?cancelled" aria-expanded="true" class="nav-link @(query=="?cancelled"?"active":string.Empty)">
                            <i class="fas fa-list-ol"></i> @Text["Đơn hủy"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="?success" aria-expanded="true" class="nav-link @(query=="?success"?"active":string.Empty)">
                            <i class="fas fa-list-ol"></i> @Text["Đơn thành công"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="?all" aria-expanded="true" class="nav-link @(query=="?all"?"active":string.Empty)">
                            <i class="fas fa-list-ol"></i> @Text["All of orders", "Tất cả đơn hàng"]
                        </a>
                    </li>
                    @*<li class="nav-item">
                            <a href="@Constants.Admin_Url/page/create" aria-expanded="false" class="nav-link">
                                <i class="fas fa-plus-circle"></i> @Text["Create new page", "Tạo trang mới"]
                            </a>
                        </li>*@
                </ul>
                <div class="tab-content">
                    <div class="tab-pane show active" id="list">
                        <table id="datatable" class="table table-striped table-bordered dt-responsive" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                            <thead>
                                <tr>
                                    <th style="min-width: 230px; width: 40%;">Đơn hàng</th>
                                    <th>Thông tin giao hàng</th>
                                    <th>@Text[field.GetTitle(t => t.OrderStatus)]</th>
                                    <th>@Text[field.GetTitle(t => t.CreatedTime)]</th>
                                    <th>@Text[field.GetTitle(t => t.PayMethod)]</th>
                                    <th style="min-width: 80px;"> @Text[field.GetTitle(t => t.TotalAmount)]</th>

                                    <th style="width:1%;min-width:80px;">@Text["Control", "Thao tác"]</th>
                                </tr>
                            </thead>

                            <tbody>
                                @for (int i = items.Count - 1; i >= 0 ; i--)
                                {
                                    <tr>
                                        <td style="min-width: 230px; width: 40%;">
                                            <h5>@items[i].OrderCode</h5>
                                            <div><u>Người nhận:</u> @items[i].Name </div>
                                            <div><u>Phone:</u> @items[i].Phone</div>
                                            @*<div><u>Thông tin đơn hàng:</u> @items[i].JsonData</div>*@
                                            @if (!string.IsNullOrEmpty(items[i].Note))
                                            {
                                                <div><u>Ghi chú:</u> <span class="data-order-process">@items[i].Note</span></div>
                                            }
                                        </td>
                                        <td>
                                            <text><u>Địa chỉ giao hàng:</u> @items[i].DeliveryAddress</text>
                                        </td>
                                        <td align="center" class="data-order-status">@items[i].OrderStatus</td>
                                        <td align="center">@($"{items[i].CreatedTime:dd/MM/yyyy HH:mm}")</td>
                                        <td align="center">@items[i].PayMethod</td>
                                        <td align="right">@($"{items[i].TotalAmount:C0}")</td>
                                        <td align="center">
                                            <div class="btn-group btn-group-sm">
                                                <a title="@Text["View", "Xem"]" data-toggle="modal" data-target="#order-details-modal-center" data-order-code="@items[i].OrderCode" href="javascript:void(0)" type="button" class="btn btn-warning btn-view-order">
                                                    <span class="fa fa-eye"></span>
                                                </a>
                                                <a href="javascript:void(0)" type="button" class="btn btn-info waves-effect waves-light btn-update" data-toggle="modal" data-target="#update-modal" data-order-id="@items[i].Id"><span class="fa fa-edit"></span></a>
                                                <a title="@Text["Delete", "Xóa"]" href="javascript:delele(@items[i].Id)" type="button" class="btn btn-danger">
                                                    <span class="mdi mdi-delete"></span>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="order-details-modal-center" tabindex="-1" role="dialog"
     aria-labelledby="exampleModalScrollableTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="order-details-modal-title">Chi tiết đơn hàng</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body orderbody">
                <div class="spinner-border text-primary" role="status"><span class="sr-only">Loading...</span></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-modal-close" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div id="update-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="custom-width-modalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h2 class="text-uppercase text-center mb-4">
                    <a href="index.html" class="text-success">
                        <span><img src="/admin/assets/images/logo-sm.png" alt="" height="90"></span>
                    </a>
                </h2>

                <form class="form-horizontal form-update-status" action="#">
                    @AntiForgery.GetHtml()
                    <input type="hidden" name="id" id="id" />
                    <div class="form-group">
                        <div class="col-12">
                            <label for="status">Trạng thái</label>
                            <select class="form-control" name="status" id="status">
                                <option value="NEW">Mới</option>
                                <option value="DELIVERING">Đang giao</option>
                                <option value="SUCCESS">Thành công</option>
                                <option value="CANCELLED">Hủy</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-12">
                            <label for="password1">Nội dung cập nhật</label>
                            <textarea class="form-control" type="text" required id="note" name="note" placeholder="Nội dung xử lý .." rows="5"></textarea>
                        </div>
                    </div>

                    <div class="form-group account-btn text-center">
                        <div class="col-12">
                            <button class="btn width-lg btn-rounded btn-primary waves-effect waves-light" type="submit">Xác nhận</button>
                        </div>
                    </div>
                </form>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@section head{
    <!-- third party css -->
    <link href="@Constants.Admin_Url/assets/libs/datatables/dataTables.bootstrap4.css" rel="stylesheet" type="text/css" />
    <link href="@Constants.Admin_Url/assets/libs/datatables/buttons.bootstrap4.css" rel="stylesheet" type="text/css" />
    <link href="@Constants.Admin_Url/assets/libs/datatables/responsive.bootstrap4.css" rel="stylesheet" type="text/css" />
    <link href="@Constants.Admin_Url/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
    <style>
        .modal-dialog {
            max-width: 800px;
        }
    </style>
}
@section scripts{
    <script src="@Constants.Admin_Url/assets/libs/datatables/jquery.dataTables.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/datatables/dataTables.responsive.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/datatables/responsive.bootstrap4.min.js"></script>
    <script src="@Constants.Admin_Url/assets/libs/sweetalert2/sweetalert2.min.js"></script>

    <script>
        $(document).ready(function () {

            $(document).on("click", ".btn-update", function () {
				var orderId = $(this).attr("data-order-id");
				var status = $(this).parents("tr").find(".data-order-status").html();
				var process = $(this).parents("tr").find(".data-order-process").html();

				$("#id").val(orderId)
				$("#note").val(process)
				$("#status").val(status)
			});

			$('.form-update-status').on('submit', function (event) {
				event.preventDefault();
				console.log($(this).serialize());

				$('#update-modal').modal('hide');
				Swal.fire({
					title: 'Xin chờ đợi!',
					html: 'Hệ thống đang ghi nhận thông tin ..',
					didOpen: () => { Swal.showLoading(); },
				});

				$.post("@Constants.Admin_Url/order?update_status",
					$(this).serialize(),
					function (data) {
						Swal.fire({
							title: 'Chúc mừng!',
							text: data,
							type: "success"
						}).then(() => { window.location.reload(); });
					})
					.fail(function (error) {
						Swal.fire({
							title: '@Text["Oh, no!", "Thôi xong!"]',
							text: error.responseText,
							type: "error"
						});
					});
			});

            jQuery.extend(jQuery.fn.dataTableExt.oSort, {
                "formatted-num-pre": function (a) {
                    a = (a === "-" || a === "") ? 0 : a.replace(/[^\d\-\.]/g, "");
                    return parseFloat(a);
                },
                "formatted-num-asc": function (a, b) {
                    return a - b;
                },
                "formatted-num-desc": function (a, b) {
                    return b - a;
                }
            });

            $(document).on("click", ".btn-view-order", function () {
                var orderCode = $(this).attr("data-order-code");
                $("#order-details-modal-title").text("Chi tiết đơn hàng " + orderCode);
                $(".submit-to-ghtk").attr("data-order-code", orderCode);
                $(".orderbody").html('<div class="spinner-border text-primary" role="status"><span class="sr-only">Loading...</span></div>');
                $.get("@Constants.Admin_Url/order/view?orderCode=" + orderCode, function (data) {
                    $(".orderbody").html(data);
                });
            });

            $(document).on("click", ".submit-to-ghtk", function () {
                var orderCode = $(this).attr("data-order-code");

                $.post("@Constants.Admin_Url/order/view?push_ghtk", { orderCode : orderCode}, function (rsp) {
                    Swal.fire({
                        title: 'Chúc mừng!',
                        text: rsp,
                        type: "success"
                    }).fail(function (error) {
                        Swal.fire({
                            title: 'ERROR',
                            text: error,
                            type: "error"
                        });
                    })
                });
            });

            $('#datatable').DataTable({
                "aaSorting": [],
                "columnDefs": [{ type: 'formatted-num', targets: 0 }],
                "pageLength": 100,
                "lengthChange": false,
            });
        });
    </script>
    <script>
           function delele(id) {
            Swal.fire({
                title: '@Html.Raw(Text["Confirm to delete!","Hãy xác nhận?"])',
                text: '@Html.Raw(Text["Delete operation cannot be undone","Thao tác xóa không thể hoàn tác"])',
                type: "warning",
                showCancelButton: !0,
                confirmButtonText: '@Html.Raw(Text["OK","Được"])',
                cancelButtonText: '@Html.Raw(Text["Wait!","Khoan!"])',
                confirmButtonClass: "btn btn-success mt-2",
                cancelButtonClass: "btn btn-danger ml-2 mt-2",
                buttonsStyling: !1
            }).then(function(t) {
                t.value?$.ajax({
                    url: "@Constants.Admin_Url/order?delete",
                    type: "POST",
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    data: { __RequestVerificationToken: '@AntiForgeryTokenForAjaxPost()', Id: id },
                    success: function(result) {
                        Swal.fire({
                            title: '@Html.Raw(Text["Congratulation!", "Chúc mừng!"])',
                            text: result,
                            type: "success"
                        }).then(function(t) { location.reload(); })
                    },
                    error: function(errormessage) {
                        Swal.fire({
                            title: '@Html.Raw(Text["Oh, no!", "Thôi xong!"])',
                            text: errormessage.responseText,
                            type: "error"
                        })
                    }
                }):{}
            });
        }
    </script>
}