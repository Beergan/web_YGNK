@inherits MyWebPage
@using SLK.Common
@using HtmlAgilityPack
@using System.Web
@using System.Threading.Tasks

@functions {
    [Component(
        Type = ComptType.Page_Template,
        PathPostfix = "/{0}.html",
        ComptName = "en:Blog single template|vi:Mẫu thông tin Blog",
        PageType = "item", NodeType = "post")]
    public class ViewModel : VM_Blog
    {
        public IDictionary<string, string> Phrases { get; set; } = new Dictionary<string, string>();

        public KeyValuePair<string, string>[] Breadcrumbs { get; set; }

        public string Banner { get; set; }

        public string MetaDescription { get; set; }

        public string MetaKeywords { get; set; }

        public string JsonBreadcrumb { get; set; }

        public VM_Blog[] RecentItems { get; set; }
        public VM_Blog[] count { get; set; }

        public int Id { get; set; }
        public VM_Blog PreviousPost { get; set; }
        public VM_Blog NextPost { get; set; }
        public PP_Category[] cat { get; set; }
        public static ViewModel Default => new ViewModel()
        {

        };
    }/*end_viewmodel*/
    private ViewModel _data;
    private ViewModel Data => _data ?? (_data = ViewModel.Default);
    private MyTranslator Text => new MyTranslator(Data?.Phrases);


}
@{

    string keyword = Request.QueryString[nameof(keyword)];
    var slug = ToneRemover.MakeSlug(keyword);

    _data = LoadData<ViewModel>(key: $"{LangId}-{FileName}#{NodeSlug}", setup: (model) =>
{



    model = model ?? (from cat_blog in Db.Table<PP_Category_details>()
                      join catnew in Db.Table<PP_Category>() on cat_blog.Idcat equals catnew.Id
                      join node in Db.Table<PP_Node>() on cat_blog.Idproduct equals node.Id
                      where node.NodeType == "post" && node.NodePath == NodeSlug && catnew.NodeType == "post"
                      select new ViewModel
                      {
                          Content = node.Content,
                          Title = node.Title,
                          Path = node.NodePath,
                          Summary = node.Summary,
                          ImageUrl = node.ImageUrl,
                          CreatedTime = node.CreatedTime,
                          CategoryId = catnew.Id,
                          MetaDescription = node.MetaDescription,
                          MetaKeywords = node.MetaKeywords,
                          CategoryName = catnew.Title,
                          CategoryPath = catnew.CategoryPath,
                          catid = catnew.Id,
                          idnode = cat_blog.Idproduct,
                          Featured = node.Featured,
                          listcat = node.listcat,
                      }).FirstOrDefault();

    var category = Db.GetOne<PP_Category>(t => t.CategoryPath == model.CategoryPath);


    model.Breadcrumbs = Newtonsoft.Json.JsonConvert.DeserializeObject<KeyValuePair<string, string>[]>(category.Breadcrumb);
    var arrCategory = Root.CategoryIndexes[category.Id].ToList();

    model.cat = Db.Table<PP_Category>().Where(x => x.NodeType == "post").ToArray();

    var count =
(from cat_blog in Db.Table<PP_Category_details>()
join catnew in Db.Table<PP_Category>() on cat_blog.Idcat equals catnew.Id
join node in Db.Table<PP_Node>() on cat_blog.Idproduct equals node.Id
where node.NodeType == "post"
select new VM_Blog
{
 JsonContent = node.Content,
 Title = node.Title,
 Path = node.NodePath,
 Summary = node.Summary,
 ImageUrl = node.ImageUrl,
 CreatedTime = node.CreatedTime,
 CategoryId = catnew.Id,
 CategoryName = catnew.Title,
 CategoryPath = catnew.CategoryPath,
 catid = catnew.Id,
 idnode = cat_blog.Idproduct,
 Featured = node.Featured,
 listcat = node.listcat,
})
.OrderByDescending(b => b.CreatedTime)
.ToArray();
    model.count = count;


    var news =
(from cat_blog in Db.Table<PP_Category_details>()
join catnew in Db.Table<PP_Category>() on cat_blog.Idcat equals catnew.Id
join node in Db.Table<PP_Node>() on cat_blog.Idproduct equals node.Id
where node.NodeType == "post" && arrCategory.Contains(cat_blog.Idcat ?? 0)
select new VM_Blog
{
 JsonContent = node.Content,
 Title = node.Title,
 Path = node.NodePath,
 Summary = node.Summary,
 ImageUrl = node.ImageUrl,
 CreatedTime = node.CreatedTime,
 CategoryId = catnew.Id,
 CategoryName = catnew.Title,
 CategoryPath = catnew.CategoryPath,
 catid = catnew.Id,
 idnode = cat_blog.Idproduct,
 Featured = node.Featured,
 listcat = node.listcat,
}).AsEnumerable()
.OrderByDescending(b => b.CreatedTime)
.ToArray();
    model.RecentItems = (from cat_blog in Db.Table<PP_Category_details>()
                         join catnew in Db.Table<PP_Category>() on cat_blog.Idcat equals catnew.Id
                         join node in Db.Table<PP_Node>() on cat_blog.Idproduct equals node.Id
                         where node.NodeType == "post" && arrCategory.Contains(cat_blog.Idcat ?? 0) && catnew.NodeType == "post" && node.Id != model.idnode
                         select new VM_Blog
                         {
                             JsonContent = node.Content,
                             Title = node.Title,
                             Path = node.NodePath,
                             Summary = node.Summary,
                             ImageUrl = node.ImageUrl,
                             CreatedTime = node.CreatedTime,
                             CategoryId = catnew.Id,
                             CategoryName = catnew.Title,
                             CategoryPath = catnew.CategoryPath,
                             catid = catnew.Id,
                             idnode = cat_blog.Idproduct,
                             Featured = node.Featured,
                             listcat = node.listcat,
                         }).AsEnumerable().GroupBy(b => b.Title)
.Select(g => g.OrderByDescending(b => b.CreatedTime).First())
.OrderByDescending(b => b.CreatedTime)
.ToArray();
    model.PreviousPost = (from cat_blog in Db.Table<PP_Category_details>()
                          join catnew in Db.Table<PP_Category>() on cat_blog.Idcat equals catnew.Id
                          join node in Db.Table<PP_Node>() on cat_blog.Idproduct equals node.Id
                          where node.NodeType == "post" && node.CreatedTime < model.CreatedTime
                          orderby node.CreatedTime descending
                          select new VM_Blog
                          {
                              Title = node.Title,
                              Path = node.NodePath,
                              CreatedTime = node.CreatedTime
                          }).FirstOrDefault();

    // Truy vấn bài viết sau
    model.NextPost = (from cat_blog in Db.Table<PP_Category_details>()
                      join catnew in Db.Table<PP_Category>() on cat_blog.Idcat equals catnew.Id
                      join node in Db.Table<PP_Node>() on cat_blog.Idproduct equals node.Id
                      where node.NodeType == "post" && node.CreatedTime > model.CreatedTime
                      orderby node.CreatedTime ascending
                      select new VM_Blog
                      {
                          Title = node.Title,
                          Path = node.NodePath,
                          CreatedTime = node.CreatedTime
                      }).FirstOrDefault();
    if (model == null)
    {
        HttpContext.Current.Response.Redirect("/404.html", true);
        return null;
    }
    return model;
});

    Layout = $"~/_layouts/_layout.cshtml";
    Page.Title = Data.Title;
    Page.Description = Data.MetaDescription;
    Page.Keywords = Data.MetaKeywords;


}


<div class="page_content_wrap">
    <div class="content_wrap">
        <div class="post_header_wrap post_header_wrap_in_header post_header_wrap_style_style-5">
            <div class="post_header post_header_single entry-header">
                <h1 class="post_title entry-title">@Data.Title</h1>
            </div>
        </div>
    </div>
    <div class="content_wrap">


        <div class="content">
            <a id="content_skip_link_anchor" class="globallogistics_skip_link_anchor" href="#"></a>
            <article id="post-4179" class="post_item_single post_type_post post_format_ post-4179 post type-post status-publish format-standard has-post-thumbnail hentry category-mua-ho category-tin-tuc category-van-chuyen-duong-bien category-van-chuyen-duong-hang-khong category-van-chuyen-hiwexpress category-van-chuyen-viet-han-1 category-van-chuyen-viet-han-2 category-van-chuyen-viet-han-3 category-van-hoa-han-quoc tag-han-viet tag-viet-han">
                <div class="post_header_wrap post_header_wrap_in_content post_header_wrap_style_style-5 with_featured_image">
                    <div class="post_featured alignwide with_thumb"><img loading="lazy" width="1200" height="628" src="@Data.ImageUrl" class="attachment-full size-full" alt="@Data.Title" decoding="async"></div>
                </div>
                <div class="post_content post_content_single entry-content" itemprop="mainEntityOfPage">
                    @Data.Summary
                    <div id="ez-toc-container" class="ez-toc-v2_0_68_1 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction">
                        <div class="ez-toc-title-container">
                            <p class="ez-toc-title">Mục lục bài viết</p>
                            <span class="ez-toc-title-toggle">
                                <a href="#" class="ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle ez-toc-loaded" aria-label="Toggle Table of Content">
                                    <span class="ez-toc-js-icon-con">
                                        <span class="">
                                            <span class="eztoc-hide" style="display:none;">Toggle</span>
                                            <span class="ez-toc-icon-toggle-span">
                                                <svg style="fill: #999;color:#999" xmlns="http://www.w3.org/2000/svg" class="list-377408" width="20px" height="20px" viewBox="0 0 24 24" fill="none">
                                                    <path d="M6 6H4v2h2V6zm14 0H8v2h12V6zM4 11h2v2H4v-2zm16 0H8v2h12v-2zM4 16h2v2H4v-2zm16 0H8v2h12v-2z" fill="currentColor"></path>
                                                </svg>
                                                <svg style="fill: #999;color:#999" class="arrow-unsorted-368013" xmlns="http://www.w3.org/2000/svg" width="10px" height="10px" viewBox="0 0 24 24" version="1.2" baseProfile="tiny">
                                                    <path d="M18.2 9.3l-6.2-6.3-6.2 6.3c-.2.2-.3.4-.3.7s.1.5.3.7c.2.2.4.3.7.3h11c.3 0 .5-.1.7-.3.2-.2.3-.5.3-.7s-.1-.5-.3-.7zM5.8 14.7l6.2 6.3 6.2-6.3c.2-.2.3-.5.3-.7s-.1-.5-.3-.7c-.2-.2-.4-.3-.7-.3h-11c-.3 0-.5.1-.7.3-.2.2-.3.5-.3.7s.1.5.3.7z"></path>
                                                </svg>
                                            </span>
                                        </span>
                                    </span>
                                </a>
                            </span>
                        </div>
                        <nav>
                            <div class="autoContents">
                            </div>
                        </nav>
                    </div>
                </div>
                <div class="contentss">
                    @Data.Content
                </div>
                <div class="post_footer post_footer_single entry-footer">
                    @if (!String.IsNullOrEmpty(Data.MetaKeywords))
                    {
                        <div class="post_tags_single">
                            <span class="post_meta_label">Tags:</span>
                            @foreach (var item in Data.MetaKeywords.Split(','))
                            {
                                <a href="/" rel="tag">@item</a>
                            }
                        </div>
                    }
                    <div class="post_meta post_meta_single"><a href="#" class="post_meta_item post_meta_likes trx_addons_icon-heart-empty enabled inited" title="Like" data-postid="4179" data-likes="0" data-title-like="Like" data-title-dislike="Dislike"><span class="post_meta_number">0</span><span class="post_meta_label">Likes</span></a><span class="post_meta_item post_share"><span class="socials_share socials_size_tiny socials_type_block socials_dir_horizontal socials_wrap"><span class="social_items inited"><a class="social_item social_item_popup" href="//twitter.com/intent/tweet?text=Mua+G%C3%AC+%E1%BB%9E+S%C3%A2n+Bay+H%C3%A0n+Qu%E1%BB%91c%3F+G%E1%BB%A3i+%C3%9D+Nh%E1%BB%AFng+M%C3%B3n+Qu%C3%A0+%C3%9D+Ngh%C4%A9a+%26%23038%3B+%C4%90%C3%A1ng+Ti%E1%BB%81n+Kh%C3%B4ng+N%C3%AAn+B%E1%BB%8F+Qua&amp;url=https%3A%2F%2Fnhblogistics.com%2Fmua-gi-o-san-bay-han-quoc-goi-y-nhung-mon-qua-y-nghia%2F" data-link="//twitter.com/intent/tweet?text=Mua Gì Ở Sân Bay Hàn Quốc? Gợi Ý Những Món Quà Ý Nghĩa &amp; Đáng Tiền Không Nên Bỏ Qua&amp;url=https%3A%2F%2Fnhblogistics.com%2Fmua-gi-o-san-bay-han-quoc-goi-y-nhung-mon-qua-y-nghia%2F" data-count="twitter-new"><span class="social_icon social_icon_twitter-new sc_icon_type_icons" style=""><span class="icon-twitter-new"></span></span></a><a class="social_item social_item_popup" href="//www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fnhblogistics.com%2Fmua-gi-o-san-bay-han-quoc-goi-y-nhung-mon-qua-y-nghia%2F" data-link="//www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fnhblogistics.com%2Fmua-gi-o-san-bay-han-quoc-goi-y-nhung-mon-qua-y-nghia%2F" data-count="facebook-1"><span class="social_icon social_icon_facebook-1 sc_icon_type_icons" style=""><span class="icon-facebook-1"></span></span></a><a class="social_item" href="mailto:test@fwe.com?subject=Mua%20Gì%20Ở%20Sân%20Bay%20Hàn%20Quốc?%20Gợi%20Ý%20Những%20Món%20Quà%20Ý%20Nghĩa%20&amp;%20Đáng%20Tiền%20Không%20Nên%20Bỏ%20Qua&amp;body=https%3A%2F%2Fnhblogistics.com%2Fmua-gi-o-san-bay-han-quoc-goi-y-nhung-mon-qua-y-nghia%2F" target="_blank" data-count="share-email"><span class="social_icon social_icon_share-email sc_icon_type_icons" style=""><span class="icon-share-email"></span></span></a><a class="social_item" title="Copy URL to clipboard" data-message="Copied!" data-copy-link-url="https://nhblogistics.com/mua-gi-o-san-bay-han-quoc-goi-y-nhung-mon-qua-y-nghia/" nopopup="true" href="#" target="_blank" data-count="link"><span class="social_icon social_icon_link sc_icon_type_icons" style=""><span class="icon-link"></span></span></a></span></span></span></div>                   <div class="nav-links-single">
                        <nav class="navigation post-navigation" aria-label="Bài viết">
                            <h2 class="screen-reader-text">Điều hướng bài viết</h2>
                            <div class="nav-links">
                                <div class="nav-previous">
                                    @if (Data.PreviousPost != null)
                                    {
                                        <a href="@Data.PreviousPost.Path" rel="prev">
                                            <span class="nav-arrow-label">@(LangId == "en" ? "Previous" : "Trước")</span> <h6 class="post-title">@Data.PreviousPost.Title</h6><span class="post_date">@Data.PreviousPost.CreatedTime.ToString("dd/MM/yyyy")</span>
                                        </a>
                                    }
                                </div>
                                <div class="nav-next">
                                    @if (@Data.NextPost != null)
                                    {
                                        <a href="@Data.NextPost.Path" rel="next">
                                            <span class="nav-arrow-label">@(LangId == "en" ? "Next" : "Tiếp theo")</span> <h6 class="post-title">@Data.NextPost.Title</h6><span class="post_date">@Data.NextPost.CreatedTime.ToString("dd/MM/yyyy")</span>
                                        </a>
                                    }
                                </div>
                            </div>
                        </nav>
                    </div>
                </div>
            </article>
            <section class="related_wrap related_position_below_content related_style_classic">
                <h3 class="section_title related_wrap_title">@(LangId == "en" ? "You May Also Like" : "Có thể bạn sẽ thích")</h3><div class="columns_wrap posts_container columns_padding_bottom inited_open_full_post">
                    @foreach (var item in Data.RecentItems.EmptyIfNull())
                    {
                        <div class="column-1_2">
                            <div id="post-3115" class="related_item post_format_standard post-3115 post type-post status-publish format-standard has-post-thumbnail hentry category-tin-tuc tag-dich-vu-gui-hang-tu-han-quoc-ve-viet-nam" data-post-id="3115">
                                <div class="post_featured with_thumb hover_link">
                                    <img width="664" height="664" src="@item.ImageUrl" class="attachment-globallogistics-thumb-square size-globallogistics-thumb-square wp-post-image" alt="@item.Title" decoding="async"><div class="mask"></div>
                                    <a href="@item.Path" aria-hidden="true" class="link"></a>
                                </div>  <div class="post_header entry-header">
                                    <div class="post_meta post_meta_categories"><span class="post_meta_item post_categories cat_sep"><a href="@item.CategoryPath" rel="category tag">@item.CategoryName</a></span></div><h6 class="post_title entry-title"><a href="@item.Path">@item.Title</a></h6>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </section>
        </div>
    </div>
</div>

@section scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/assets/wp-includes/js/jquery.toc.js"></script>
    <script src="~/assets/wp-includes/js/jquery.toc.min.js"></script>
    <script>
    $(document).ready(function () {
        $('.contentss').autoContents({
            contentsElement: $('.autoContents')
        });
    });

    (function ($) {
        $.fn.autoContents = function (settingsOverrides) {

            // Options
            var settings = $.extend({
                'contentsElement': $('.autoContents'),
            }, settingsOverrides);

            var contents = [];
            var ulStack = [];
            var lastLevel = 0;

            $(this).find('h1, h2, h3').each(function () {
                var headingContent = $(this).text().trim();
                var headingId = generateUniqueID(headingContent);
                var currLevel = parseInt(this.nodeName.substring(1)); // Lấy số từ h1/h2/h3 → 1/2/3

                $(this).attr('id', headingId); // Gán id cho heading

                // Đóng ul nếu cấp độ giảm
                while (currLevel < lastLevel) {
                    contents.push('</li></ul>');
                    ulStack.pop();
                    lastLevel--;
                }

                // Nếu cấp tăng → mở ul mới
                if (currLevel > lastLevel) {
                    contents.push('<ul>');
                    ulStack.push(currLevel);
                    lastLevel = currLevel;
                } else if (currLevel === lastLevel && contents.length > 0) {
                    contents.push('</li>');
                }

                // Tạo item
                contents.push('<li><a href="@Data.Path#' + headingId + '">' + headingContent + '</a>');

            });

            // Đóng các ul còn lại
            while (ulStack.length > 0) {
                contents.push('</li></ul>');
                ulStack.pop();
            }

            // Gán HTML vào khối mục lục
            $(settings.contentsElement).html(contents.join(''));

            // Hàm sinh ID duy nhất
            function generateUniqueID(text) {
                return text
                    .trim()
                    .toLowerCase()
                    .replace(/[^\w\s-]/g, '')  // loại ký tự đặc biệt
                    .replace(/\s+/g, '-') + '-' + Math.random().toString(36).substr(2, 6);
            }
        };
    })(jQuery);
    </script>

    <script>
        $(document).ready(function () {
            // Toggle khi click vào nút
            $('.ez-toc-title-toggle a').on('click', function (e) {
                e.preventDefault();
                $('.autoContents').slideToggle(200); // Ẩn/hiện mượt mà
            });
        });
    </script>
    <script>
        function toggleContents() {
            $('.sidenav').toggle();
        }

        function openNav() {
            var mySidenav = document.getElementById("mySidenav");
            var mainContent = document.getElementById("main");
            if (window.innerWidth <= 678) {
                mySidenav.style.width = "100%";
                mySidenav.style.height = "100%";

            } else {
                mySidenav.style.width = "300px";
                mainContent.style.marginLeft = "300px";
            }
        }

        function closeNav() {
            var mySidenav = document.getElementById("mySidenav");
            var mainContent = document.getElementById("main");
            if (window.innerWidth <= 678) {
                mySidenav.style.width = "0";
                mainContent.style.marginLeft = "0";
            } else {
                mySidenav.style.width = "0";
                mainContent.style.marginLeft = "120px";
            }
        }
    </script>
}