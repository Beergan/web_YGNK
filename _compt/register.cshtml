@inherits MyWebPage
@using SLK.Common
@functions {
    [Component(
        Type = ComptType.Page_Template,
        ComptName = "en:Page contact template|vi:Mẫu trang đăng ký ")]

    public class ViewModel
    {
        public IDictionary<string, string> Phrases { get; set; } = new Dictionary<string, string>();

        public string Title { get; set; }

        public string MetaDescription { get; set; }

        public string MetaKeywords { get; set; }



        public static ViewModel Default => new ViewModel()
        {

        };
    }/*end_viewmodel*/
    private ViewModel _data;
    private ViewModel Data => _data ?? (_data = ViewModel.Default);
    private MyTranslator Text => new MyTranslator(Data?.Phrases);
    private FieldExtractor<VM_Register> field = new FieldExtractor<VM_Register>();
}
@{
    var query = Request.Url.Query;
    if (IsPost && query == "?register")
    {
        new Func<Action>(() =>
        {
            try
            {
                AntiForgery.Validate();
                string captcha = Request.Form[nameof(captcha)].ToLower();
                Validation.RequireField(field.GetName(t => t.FullName));
                Validation.RequireField(field.GetName(t => t.Email));
                Validation.RequireField(field.GetName(t => t.Password));
                Validation.RequireField(field.GetName(t => t.Address));
                Validation.RequireField(field.GetName(t => t.Province));
                Validation.RequireField(field.GetName(t => t.District));
                Validation.RequireField(field.GetName(t => t.Ward));
                Validation.RequireField(field.GetName(t => t.Phone));
                Validation.Add(field.GetName(t => t.Password),
                Validator.StringLength(
                maxLength: Int32.MaxValue,
                minLength: 6,
                errorMessage: Text["Password must be at least 6 characters.", "Mật khẩu phải gồm ít nhất 6 ký tự."]));


                //if (!Validation.IsValid())
                //{
                //    return AjaxResult.BadRequest("Hãy nhập đầy đủ thông tin!");
                //}

                if (captcha != this.Context.Session["CaptchaVerify"].ToString())
                {
                    return AjaxResult.BadRequest("Mã ccapcha không hợp lệ");
                }


                var pass = Request.Form[field.GetName(t => t.Password)].NullIfWhiteSpace();
                var passconfirm = Request.Form[field.GetName(t => t.ConfirmPassword)].NullIfWhiteSpace();
                var email = Request.Form[field.GetName(t => t.Email)].NullIfWhiteSpace();

                var customer = Db.Table<PP_Customer>().SingleOrDefault(X => X.Email.ToLower() == email);
                if (customer != null)
                {
                    return AjaxResult.BadRequest("Email này đã đăng ký!");

                }

                if (pass == passconfirm)
                {
                    var model = new PP_Customer() { Active = true };
                    model.Name = Request.Form[field.GetName(t => t.FullName)].NullIfWhiteSpace();
                    model.Email = Request.Form[field.GetName(t => t.Email)].NullIfWhiteSpace();
                    model.PASSWORD = Crypto.SHA256(Request.Form[field.GetName(t => t.Password)].NullIfWhiteSpace());
                    model.FullName = Request.Form[field.GetName(t => t.FullName)].NullIfWhiteSpace();
                    model.Phone = Request.Form[field.GetName(t => t.Phone)].NullIfWhiteSpace();
                    model.Adress = Request.Form[field.GetName(t => t.Address)].NullIfWhiteSpace();
                    model.Provinces = Request.Form["ProvinceName"].NullIfWhiteSpace();
                    model.Districts = Request.Form["DistrictName"].NullIfWhiteSpace();
                    model.wards = Request.Form["WardName"].NullIfWhiteSpace();
                    model.ProvincesId = Request.Form[field.GetName(t => t.Province)].AsInt();
                    model.DistrictsId = Request.Form[field.GetName(t => t.District)].AsInt();
                    model.wardsId = Request.Form[field.GetName(t => t.Ward)].AsInt();
                    Db.Insert<PP_Customer>(model);
                    HttpContext context = HttpContext.Current;
                    var userId = model.Id;

                    HttpCookie cookie = new HttpCookie("UserId", userId.ToString());
                    cookie.Expires = DateTime.Now.AddDays(1);
                    Response.Cookies.Add(cookie);
                    model.CreatedTime = DateTime.Now;
                    Response.Write("redirect:/tai-khoan");
                    return () => Response.End();
                }
                return AjaxResult.BadRequest("Đã có lỗi xảy ra!");
            }
            catch (Exception ex)

            {
                ModelState.AddFormError(ex.Message);
                return AjaxResult.BadRequest("Đã có lỗi xảy ra!");
            }
        })()();
    }

    _data = LoadData<ViewModel>(key: $"{LangId}-{FileName}#{NodeSlug}", setup: (model) =>
    {
        model = model ?? ViewModel.Default;

        var page = Db.GetOne<PP_Page>(PageId);

        if (page == null)
        {
            return model;
        }

        model.Title = page.Title;
        model.MetaDescription = page.MetaDescription;
        model.MetaKeywords = page.MetaKeywords;

        return model;
    });
    Layout = $"~/_layouts/_layout.cshtml";
    Page.Title = Data.Title;
    Page.Description = Data.MetaDescription;
    Page.Keywords = Data.MetaKeywords;
}
<div class=" bg-light ">
    <div class="container pt-2 pb-2 pb-lg-3 pt-lg-3 ">
        <div class="row signup-form ">
            <div class="col-lg-12">
                <div class="modal-header">
                    <h5 class="w-100 text-center">ĐĂNG KÝ</h5>
                </div>
                <div class="modal-body container" style="max-width: 800px;">
                    <form action="?register" class="location-selector" method="post">
                        @AntiForgery.GetHtml()
                        @Html.ValidationSummary(Text["", ""], excludeFieldErrors: true, htmlAttributes: null)
                        <div class="row mb-3">
                            <input type="hidden" name="ProvinceName" id="ProvinceName" />
                            <input type="hidden" name="DistrictName" id="DistrictName" />
                            <input type="hidden" name="WardName" id="WardName" />
                            <div class="col-lg-6 col-12">
                                <div class="form-group">
                                    <label for="name"><i class="fa-regular fa-user"></i></label>
                                    <input class="border-radius-4px  input-small" type="text" style="width: 88%" name="@field.GetName(x=>x.FullName)" aria-label="text" placeholder="Họ và tên" required="">
                                </div>
                            </div>
                            <div class="col-lg-6 col-12">
                                <div class="form-group">
                                    <label for="name"><i class="fa-solid fa-envelope"></i></label>
                                    <input class="border-radius-4px  input-small" type="email" style="width: 88%" name="@field.GetName(x=>x.Email)" placeholder="Email" required="">
                                </div>
                            </div>
                            <div class="col-lg-6 col-12">
                                <div class="form-group">
                                    <label for="name"><i class="fa-solid fa-phone"></i></label>
                                    <input class="border-radius-4px  input-small" type="number" style="width: 88%" name="@field.GetName(x=>x.Phone)" placeholder="Số điện thoại" required="">
                                </div>
                            </div>
                            <div class="col-lg-6 col-12">
                                <div class="form-group">
                                    <label for="name"><i class="fa-solid fa-location-dot"></i></label>
                                    <input class="border-radius-4px  input-small mb-20px" name="@field.GetName(x=>x.Address)" style="width: 88%" type="text" placeholder="@(LangId == "en" ? "House number and street name" : "Số nhà/ tên đường")">
                                </div>
                            </div>
                            <div class="col-lg-6 col-12">
                                <div class="form-group">
                                    <div class="password-wrapper position-relative">
                                        <label for="password"><i class="fa-solid fa-circle-user"></i></label>
                                        <input class="border-radius-4px  input-small mb-20px" style="width:88%"
                                               id="password-input2"
                                               name="@field.GetName(x=>x.Password)"
                                               type="password"
                                               placeholder="@(LangId == "en" ? "House number and street name" : "Nhập mật khẩu")">
                                        <i class="fa fa-eye toggle-password position-absolute" id="togglePassword2" style="top: 50%; right: 10px; transform: translateY(-50%); cursor: pointer;"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-12">
                                <div class="form-group">
                                    <div class="password-wrapper position-relative">
                                        <label for="password"><i class="fa-solid fa-circle-user"></i></label>
                                        <input class="border-radius-4px  input-small mb-20px" style="width: 88%"
                                               id="password-input1"
                                               name="@field.GetName(x=>x.ConfirmPassword)"
                                               type="password"
                                               placeholder="@(LangId == "en" ? "House number and street name" : "Nhập lại mật khẩu")">
                                        <i class="fa fa-eye toggle-password position-absolute" id="togglePassword1" style="top: 50%; right: 10px; transform: translateY(-50%); cursor: pointer;"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-md-4 mt-3">
                                <select id="province" class="form-select select-small border-radius-4px" required name="@field.GetName(x=>x.Province)"></select>
                                <small class="text-danger">@Html.ValidationMessage("province")</small>
                            </div>
                            <div class="col-12 col-md-4 mt-3">
                                <select id="districts" class="form-select select-small border-radius-4px" required name="@field.GetName(x=>x.District)"></select>
                                <small class="text-danger">@Html.ValidationMessage("districts")</small>
                            </div>
                            <div class="col-12 col-md-4 mt-3">
                                <select id="wards" class="form-select select-small border-radius-4px" required name="@field.GetName(x=>x.Ward)"></select>
                                <small class="text-danger">@Html.ValidationMessage("wards")</small>
                            </div>
                        </div>
                        <div class="row">
                            <div class="mb-3 form-check ">
                                <input type="checkbox" style="margin-left: -5px;" id="exampleCheck1">
                                <label class="form-check-label" for="exampleCheck1">Tôi đồng ý với <a href="/dieu-khoan" class="link">điều khoản sự dụng</a></label>
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-12">
                                <button type="submit" class="btn btn-login contact text-center register p-3">Đăng ký</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Location selector initialization
            $(".location-selector").vnLocationSelector({
                provinceId: "province",
                districtId: "districts",
                wardId: "wards",
                provinceNameId: "ProvinceName",
                districtNameId: "DistrictName",
                wardNameId: "WardName",
                savedProvince: null,
                savedDistrict: null,
                savedWard: null,
                savedProvinceName: "",
                savedDistrictName: "",
                savedWardName: ""
            });

            // Toggle password visibility
            $('.toggle-password').on('click', function () {
                console.log('Toggle password clicked'); // Debug log
                const passwordField = $(this).prev('input');
                const type = passwordField.attr('type') === 'password' ? 'text' : 'password';
                passwordField.attr('type', type);
                $(this).toggleClass('fa-eye fa-eye-slash');
            });

            // Form submission with CAPTCHA
            $(document).on("click", ".register", function (event) {
                event.preventDefault();
                Swal.fire({
                    title: 'Nhập mã captcha',
                    input: 'text',
                    inputAttributes: {
                        autocapitalize: 'off'
                    },
                    imageUrl: '/captcha.ashx',
                    imageWidth: 300,
                    imageHeight: 150,
                    showCancelButton: true,
                    confirmButtonText: 'Ok',
                    showLoaderOnConfirm: true,
                    preConfirm: (value) => {
                        $("input[name='captcha']", this).val(value);
                        return value;
                    },
                    allowOutsideClick: () => !Swal.isLoading()
                }).then((result) => {
                    if (!result.isConfirmed) return;

                    Swal.fire({
                        title: 'Xin chờ đợi!',
                        html: 'Hệ thống đang ghi nhận thông tin ..',
                        didOpen: () => { Swal.showLoading(); }
                    });

                    $.post(window.location.pathname + "?register", {
                        __RequestVerificationToken: "@Root.AntiForgeryTokenForAjaxPost()",
                        @field.GetName(x => x.FullName): $("input[name='@field.GetName(x => x.FullName)']").val(),
                        @field.GetName(x => x.Address): $("input[name='@field.GetName(x => x.Address)']").val(),
                        @field.GetName(x => x.Province): $("select[name='@field.GetName(x => x.Province)']").val(),
                        @field.GetName(x => x.District): $("select[name='@field.GetName(x => x.District)']").val(),
                        @field.GetName(x => x.Ward): $("select[name='@field.GetName(x => x.Ward)']").val(),
                        @field.GetName(x => x.Phone): $("input[name='@field.GetName(x => x.Phone)']").val(),
                        @field.GetName(x => x.Password): $("input[name='@field.GetName(x => x.Password)']").val(),
                        @field.GetName(x => x.ConfirmPassword): $("input[name='@field.GetName(x => x.ConfirmPassword)']").val(),
                        @field.GetName(x => x.Email): $("input[name='@field.GetName(x => x.Email)']").val(),
                        captcha: result.value
                    }, function (data) {
                        if (typeof data === "string" && data.startsWith("redirect:")) {
                            const redirectUrl = data.replace("redirect:", "").trim();
                            window.location.href = redirectUrl;
                        } else {
                            Swal.fire({
                                title: 'Thông báo',
                                text: data,
                                icon: 'success'
                            });
                        }
                    }).fail(function (error) {
                        Swal.fire({
                            title: 'Thôi xong!',
                            text: error.responseText,
                            type: "error"
                        });
                    });
                });
            });
        });
    </script>
}