@inherits MyWebPage
@using SLK.Common
@using Newtonsoft.Json
@functions {
    [Component(Type = ComptType.Page_Template,
        ComptName = "en:Homepage template|vi:Mẫu trang cá nhân")]

    public class ViewModel
    {
        public PP_Customer Customer { get; set; }
        public string Title { get; set; }
        public IDictionary<string, string> Phrases { get; set; } = new Dictionary<string, string>();
        public string MetaDescription { get; set; }
        public string MetaKeywords { get; set; }
        public string CategoryPath { get; set; }
        public PP_Order[] Order { get; set; }
        public List<OrderLine> listorder { get; set; }

        public static ViewModel Default => new ViewModel();
    }

    public class OrderLine
    {
        public string Title { get; set; }
        public string Variation { get; set; }
        public decimal Price { get; set; }
        public int Quantity { get; set; }
        public decimal RowTotal { get; set; }
    }

    private ViewModel _data;
    private ViewModel Data => _data ?? (_data = ViewModel.Default);
    private MyTranslator Text => new MyTranslator(Data?.Phrases);
    private FieldExtractor<VM_Myacount> field = new FieldExtractor<VM_Myacount>();
    private FieldExtractor<PP_Node> field2 = new FieldExtractor<PP_Node>();
}

@{
    _data = LoadData<ViewModel>(key: $"{LangId}-{FileName}#{NodeSlug}", setup: (model) =>
    {
        model = model ?? ViewModel.Default;
        HttpContext context = HttpContext.Current;
        HttpCookie cookie = Request.Cookies["UserId"];
        if (cookie != null)
        {
            int customerId;
            if (cookie != null && int.TryParse(cookie.Value, out customerId))
            {
                model.Customer = Db.Table<PP_Customer>()
                                   .AsNoTracking()
                                   .SingleOrDefault(x => x.Id == (int)customerId);
                model.Order = Db.Table<PP_Order>().AsNoTracking().Where(x => x.Iduser == (int)customerId).ToArray();
            }
        }
        if (model.Customer == null)
        {
            Response.Redirect("/");
        }
        return model;


    });

    var query = Request.Url.Query;

    if (IsPost && query == "?myacount")
    {
        try
        {
            AntiForgery.Validate();
            Validation.RequireField(field.GetName(t => t.FullName));
            Validation.RequireField(field.GetName(t => t.Email));
            Validation.RequireField(field.GetName(t => t.Province));
            Validation.RequireField(field.GetName(t => t.District));
            Validation.RequireField(field.GetName(t => t.Ward));
            Validation.RequireField(field.GetName(t => t.Phone));
            var email = Request.Form[field.GetName(t => t.acount)].NullIfWhiteSpace();
            HttpCookie cookie = Request.Cookies["UserId"];
            int customerId;
            if (cookie != null && int.TryParse(cookie.Value, out customerId))
            {
                var model = Db.GetOne<PP_Customer>(x => x.Id == (int)customerId);
                model.Active = true;
                model.Email = Request.Form[field.GetName(t => t.Email)].NullIfWhiteSpace();
                model.FullName = Request.Form[field.GetName(t => t.FullName)].NullIfWhiteSpace();
                model.Phone = Request.Form[field.GetName(t => t.Phone)].NullIfWhiteSpace();
                model.Adress = Request.Form[field.GetName(t => t.Adress)].NullIfWhiteSpace();
                model.Provinces = Request.Form["ProvinceName"].NullIfWhiteSpace();
                model.Districts = Request.Form["DistrictName"].NullIfWhiteSpace();
                model.wards = Request.Form["WardName"].NullIfWhiteSpace();
                model.ProvincesId = Request.Form[field.GetName(t => t.Province)].AsInt();
                model.DistrictsId = Request.Form[field.GetName(t => t.District)].AsInt();
                model.wardsId = Request.Form[field.GetName(t => t.Ward)].AsInt();
                model.CreatedTime = DateTime.Now;
                Db.Update<PP_Customer>(model);
            }
        }
        catch (Exception ex)
        {
            ModelState.AddFormError(ex.Message);
            Response.Write("Lưu thất bại");
        }
    }

    if (IsPost && query == "?pass")
    {
        try
        {
            AntiForgery.Validate();
            Validation.RequireField(field.GetName(t => t.PASSWORD));
            Validation.RequireField(field.GetName(t => t.ConfirmPassword));
            Validation.Add(field.GetName(t => t.PASSWORD),
                Validator.StringLength(
                    maxLength: Int32.MaxValue,
                    minLength: 6,
                    errorMessage: Text["Password must be at least 6 characters.", "Mật khẩu phải gồm ít nhất 6 ký tự."]));

            var pass = Request.Form[field.GetName(t => t.PASSWORD)].NullIfWhiteSpace();
            var passconfirm = Request.Form[field.GetName(t => t.ConfirmPassword)].NullIfWhiteSpace();
            var email = Request.Form[field.GetName(t => t.acount)].NullIfWhiteSpace();

            HttpCookie cookie = Request.Cookies["UserId"];
            int customerId;
            if (cookie != null && int.TryParse(cookie.Value, out customerId))
            {
                var customer = Db.Table<PP_Customer>().SingleOrDefault(X => X.Id == (int)customerId);
                if (pass != passconfirm)
                {
                    Response.Write("Mật khẩu không trùng khớp!");
                    Response.Redirect(NodeSlug);
                }
                var model = new PP_Customer() { Active = false };
                customer.PASSWORD = Crypto.SHA256(Request.Form["pass-new"].NullIfWhiteSpace());
                customer.CreatedTime = DateTime.Now;
                Db.Update<PP_Customer>(customer);
                HttpContext context = HttpContext.Current;
                var userId = model.Id;
                model.CreatedTime = DateTime.Now;
                Response.Write("Đổi mật khẩu thành công");
            }
            Response.Redirect(NodeSlug);
        }
        catch (Exception ex)
        {
            ModelState.AddFormError(ex.Message);
            Response.Write("Cám ơn bạn đã đăng ký");
        }
    }

    if (IsPost && query == "?logout")
    {
        string customHandler = "logout";

        if (Request.Form["id"] == customHandler)
        {
            HttpCookie cookie = new HttpCookie("UserId");
            cookie.Expires = DateTime.Now.AddDays(-1);
            Response.Cookies.Add(cookie);
            Response.Redirect("/");
        }
    }
}

@{
    Layout = $"~/_layouts/_layout.cshtml";
    Page.Title = Data.Title;
    Page.Description = Data.MetaDescription;
    Page.Keywords = Data.MetaKeywords;
    var bard = Db.Table<PP_Category>().Where(x => x.ParentId == 1062).ToList();
}

@section head{
    <style>
        .location-selector select {
            display: block !important;
            visibility: visible !important;
            min-height: 38px;
        }

        th {
            color: black !important
        }

        .loading-spinner {
            position: absolute;
            z-index: 1000;
            background: rgba(0, 0, 0, 0.5);
            color: white;
            padding: 10px;
            display: none;
        }

        /* Cải thiện giao diện các nút tab */
        #indrydetalis .nav-tabs {
            border-bottom: 2px solid #dee2e6;
            display: flex;
            justify-content: center;
            gap: 10px;
        }

            #indrydetalis .nav-tabs .nav-link {
                padding: 10px 20px;
                border: none;
                background-color: #f8f9fa;
                color: #495057;
                border-radius: 5px 5px 0 0;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                gap: 8px;
                font-size: 16px;
                font-weight: 500;
            }

                #indrydetalis .nav-tabs .nav-link:hover {
                    background-color: #e9ecef;
                    color: #007bff;
                }

                #indrydetalis .nav-tabs .nav-link.active1 {
                    background-color: #007bff;
                    color: white;
                    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
                }

                #indrydetalis .nav-tabs .nav-link i {
                    font-size: 18px;
                }

        .status-container {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }

        .status-step {
            text-align: center;
            flex: 1;
        }

            .status-step.active .status-icon {
                background-color: #007bff;
            }

        .status-icon {
            width: 20px;
            height: 20px;
            background-color: #ccc;
            border-radius: 50%;
            margin: 0 auto 5px;
        }

        .status-title {
            font-size: 14px;
        }

        .order-summary {
            cursor: pointer;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
        }

            .order-summary:hover {
                background-color: #f1f1f1;
            }

        .qr-modal-body {
            text-align: center;
        }

            .qr-modal-body p {
                margin: 10px 0;
                font-size: 14px;
            }
        .tab-pane {
            display: none;
        }

            .tab-pane.active1 {
                display: block;
            }
    </style>
}

<div class="bg-light">
    <div class="container pt-2 pb-2 pb-lg-3 pt-lg-3">
        <div class="row">
            <div class="col-lg-12">
                <div class="main-banner-page" style="background-color: #f2f2f2">
                    @if (Data.Customer != null)
                    {
                        var iduser = (Request.Cookies["UserId"]);
                        <div class="container badge-light" style="background-color:#ffffff">
                            <div class="row mt-2 pb-2 m-0 position-relative">
                                <div class="col-lg-2 col-12">
                                    <div class="img-container">
                                        <img class="img-fluid" src="~/assets/images/logo.png" title="" alt="" loading="lazy" />
                                    </div>
                                </div>
                                <div class="col-lg-9 col-9">
                                </div>
                                <div class="row border-bottom top-20">
                                    <div class="col-lg-9 col-12">
                                        <h4>@Data.Customer.FullName</h4>
                                        <h4>@Data.Customer.Email</h4>
                                    </div>
                                    <div class="col-lg-3 text-right">
                                        <form action="@NodeSlug?logout" method="post" id="logout">
                                            <input type="hidden" name="id" value="logout" />
                                            <button class="cat border-0 mt-1 p-1" type="submit"><h6 class="text-white"><strong>Đăng xuất</strong></h6></button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 mt-lg-4 mb-lg-4 mt-2 mb-2 text-center">
                                    <div class="d-lg-flex d-block" id="indrydetalis">
                                        <ul class="nav nav-tabs">
                                            <li class="nav-item">
                                                <button class="nav-link active1" data-target="tab1">
                                                    <i class="fas fa-user"></i> Thông tin
                                                </button>
                                            </li>
                                            <li class="nav-item">
                                                <button class="nav-link" data-target="tab3">
                                                    <i class="fas fa-lock"></i> Đổi mật khẩu
                                                </button>
                                            </li>
                                            <li class="nav-item">
                                                <button class="nav-link" data-target="tab2">
                                                    <i class="fas fa-shopping-cart"></i> Danh sách đơn hàng
                                                </button>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="collapse col-lg-12 tab-pane active1" id="tab1" >
                                    <div class="row m-0">
                                        <div class="col-lg-12">
                                            <div class="user_acount">
                                                <form action="@NodeSlug?myacount" class="location-selector" id="myacount" method="post">
                                                    <div class="row m-0">
                                                        @AntiForgery.GetHtml()
                                                        @Html.ValidationSummary(Text["", ""], excludeFieldErrors: true, htmlAttributes: null)
                                                        <input type="hidden" name="ProvinceName" id="ProvinceName" />
                                                        <input type="hidden" name="DistrictName" id="DistrictName" />
                                                        <input type="hidden" name="WardName" id="WardName" />
                                                        <div class="col-lg-6 mt-lg-4 mt-3">
                                                            <label class="form-label"><i class="fa-solid fa-user"></i></label>
                                                            <input type="text" id="full-acount" value="@Data.Customer.FullName" name="@field.GetName(x => x.FullName)" placeholder="Họ và tên" required>
                                                        </div>
                                                        <div class="col-lg-6 mt-lg-4 mt-3">
                                                            <label class="form-label"><i class="fa-solid fa-envelope"></i></label>
                                                            <input type="email" id="email-acount" name="@field.GetName(x=>x.Email)" value="@Data.Customer.Email" placeholder="Email" required>
                                                        </div>
                                                        <div class="col-lg-6 mt-lg-4 mt-3">
                                                            <label class="form-label"><i class="fa-solid fa-phone-volume"></i></label>
                                                            <input type="tel" id="phone-acount" name="@field.GetName(x=>x.Phone)" value="@Data.Customer.Phone" placeholder="Số điện thoại" required>
                                                        </div>
                                                        <div class="col-lg-6 mt-lg-4 mt-3">
                                                            <label class="form-label"><i class="fa-solid fa-location-dot"></i></label>
                                                            <input type="text" id="address-acount" name="@field.GetName(x=>x.Adress)" value="@Data.Customer.Adress" placeholder="Địa chỉ" required>
                                                        </div>
                                                        <div class="col-12 col-md-4 mt-3">
                                                            <select id="province" class="form-select select-small border-radius-4px" required name="@field.GetName(x=>x.Province)"></select>
                                                            <small class="text-danger">@Html.ValidationMessage("province")</small>
                                                        </div>
                                                        <div class="col-12 col-md-4 mt-3">
                                                            <select id="districts" class="form-select select-small border-radius-4px" required name="@field.GetName(x=>x.District)"></select>
                                                            <small class="text-danger">@Html.ValidationMessage("districts")</small>
                                                        </div>
                                                        <div class="col-12 col-md-4 mt-3">
                                                            <select id="wards" class="form-select select-small border-radius-4px" required name="@field.GetName(x=>x.Ward)"></select>
                                                            <small class="text-danger">@Html.ValidationMessage("wards")</small>
                                                        </div>
                                                    </div>
                                                    <div class="row mt-3 mb-4">
                                                        <div class="col-lg-12 text-left">
                                                            <div class="action_btns p-b-4">
                                                                <div class="one_half last">
                                                                    <button class="btn btn_red" type="submit" style="left:0; margin-bottom:5%; width: 150px; color: white; padding: 10px 20px; border: none; text-align: center;">Lưu</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="collapse col-lg-12 tab-pane" id="tab2" >
                                    <div class="row m-0">
                                        <div class="col-lg-12">
                                            @if (!Data.Order.Any())
                                            {
                                                <div class="container text-center mt-3">
                                                    <p class="lookup-text">Không tìm thấy đơn hàng!</p>
                                                </div>
                                            }
                                            else
                                            {
                                                int orderIndex = 0;
                                                foreach (var item in Data.Order)
                                                {
                                                    List<OrderLine> orderLines = null;
                                                    try
                                                    {
                                                        orderLines = Json.Decode<List<OrderLine>>(item.JsonData) ?? new List<OrderLine>();
                                                    }
                                                    catch (Exception ex)
                                                    {
                                                        orderLines = new List<OrderLine>();
                                                        <div class="alert alert-danger">Lỗi khi đọc chi tiết đơn hàng: @ex.Message</div>
                                                    }

                                                    <div class="order-summary">
                                                        <div class="d-flex justify-content-between align-items-center">
                                                            <h5>Mã đơn hàng: @item.OrderCode</h5>
                                                            <div>
                                                                <button class="btn btn-primary btn-sm" data-bs-toggle="collapse" data-bs-target="#orderDetails@(orderIndex)">Xem chi tiết</button>
                                                                @if (!String.IsNullOrEmpty(item.Check1) && item.Check1 == "DELIVERING")
                                                                {
                                                                    <button class="btn btn-success btn-sm generate-qr-btn" data-bs-toggle="modal" data-bs-target="#qrModal@(orderIndex)" data-order-code="@item.OrderCode" data-customer-name="@Data.Customer.FullName" data-payment-name="Thanh toán lần 1" data-amount="@(item.TotalAmount + item.Costs)">Quét mã QR thanh toán lần 1</button>

                                                                }
                                                                else if (item.Check2 == "DELIVERING" && item.Check1 == "SUCCESS")
                                                                {
                                                                    <button class="btn btn-success btn-sm generate-qr-btn" data-bs-toggle="modal" data-bs-target="#qrModal@(orderIndex)" data-order-code="@item.OrderCode" data-customer-name="@Data.Customer.FullName" data-payment-name="Thanh toán lần 2" data-amount="@(item.ShipFee)">Quét mã QR thanh toán lần 2</button>
                                                                }


                                                                @if (!String.IsNullOrEmpty(item.Image))
                                                                {
                                                                    var images = new List<string>();
                                                                    try
                                                                    {
                                                                        string cleanedImage = item.Image.Trim();
                                                                        if (cleanedImage.StartsWith("{") && cleanedImage.EndsWith("}"))
                                                                        {
                                                                            cleanedImage = cleanedImage.Substring(1, cleanedImage.Length - 2);
                                                                        }
                                                                        if (cleanedImage.StartsWith("[") && cleanedImage.EndsWith("]"))
                                                                        {
                                                                            images = JsonConvert.DeserializeObject<List<string>>(cleanedImage) ?? new List<string>();
                                                                        }
                                                                    }
                                                                    catch { images = new List<string>(); }

                                                                    var imageJson = JsonConvert.SerializeObject(images);
                                                                    <button class="btn btn-info btn-sm view-images-btn"
                                                                            data-images='@Html.Raw(imageJson)'
                                                                            data-bs-toggle="modal"
                                                                            data-bs-target="#imageModal@(orderIndex)">
                                                                        Xem hình ảnh
                                                                    </button>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Modal cho mã QR -->
                                                    <div class="modal fade" id="qrModal@(orderIndex)" tabindex="-1" aria-labelledby="qrModalLabel@(orderIndex)" aria-hidden="true">
                                                        <div class="modal-dialog modal-dialog-centered">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title" id="qrModalLabel@(orderIndex)">Thanh toán đơn hàng: @item.OrderCode</h5>
                                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                </div>
                                                                <div class="modal-body qr-modal-body">
                                                                    <div id="qrCode@(orderIndex)"></div>
                                                                    <p>Vui lòng quét mã QR bằng ứng dụng ngân hàng để thanh toán.</p>
                                                                </div>
                                                                <div class="modal-footer">
                                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="modal fade" id="imageModal@(orderIndex)" tabindex="-1" aria-labelledby="imageModalLabel@(orderIndex)" aria-hidden="true">
                                                        <div class="modal-dialog modal-dialog-scrollable modal-lg">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title">Hình ảnh đơn hàng</h5>
                                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                                                                </div>
                                                                <div class="modal-body image-modal-body">
                                                                    <!-- Nội dung hình ảnh sẽ được JS thêm vào -->
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="collapse" id="orderDetails@(orderIndex)">
                                                        @if (item.OrderStatus == "CANCELLED")
                                                        {
                                                            <div class="container text-center mt-3">
                                                                <p class="lookup-text">@item.Note</p>
                                                            </div>
                                                            <div class="status-container">
                                                                <div class="status-step @(item.OrderStatus == "NEW" ? "active" : "")">
                                                                    <div class="status-icon"></div>
                                                                    <div class="status-title">Đang xử lý</div>
                                                                </div>
                                                                <div class="status-step @(item.OrderStatus == "DELIVERING" ? "active" : "")">
                                                                    <div class="status-icon"></div>
                                                                    <div class="status-title">Đang giao</div>
                                                                </div>
                                                                <div class="status-step @(item.OrderStatus == "CANCELLED" ? "active" : "")">
                                                                    <div class="status-icon"></div>
                                                                    <div class="status-title">Đã bị hủy</div>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="status-container">
                                                                <div class="status-step @(item.OrderStatus == "NEW" ? "active" : "")">
                                                                    <div class="status-icon"></div>
                                                                    <div class="status-title">Đang xử lý</div>
                                                                </div>
                                                                <div class="status-step @(item.OrderStatus == "DELIVERING" && item.Check1 == "DELIVERING" ? "active" : "")">
                                                                    <div class="status-icon"></div>
                                                                    <div class="status-title">Y/C thanh toán đợt 1</div>
                                                                </div>
                                                                <div class="status-step @(item.OrderStatus == "DELIVERING" && item.Check2 == "DELIVERING" ? "active" : "")">
                                                                    <div class="status-icon"></div>
                                                                    <div class="status-title">Y/C thanh toán đợt 2</div>
                                                                </div>
                                                                <div class="status-step @(item.OrderStatus == "DELIVERING" && item.Check2 == "SUCCESS" ? "active" : "")">
                                                                    <div class="status-icon"></div>
                                                                    <div class="status-title">Đang giao</div>
                                                                </div>
                                                                <div class="status-step @(item.OrderStatus == "SUCCESS" ? "active" : "")">
                                                                    <div class="status-icon"></div>
                                                                    <div class="status-title">Đã giao thành công</div>
                                                                </div>
                                                            </div>
                                                        }

                                                        <div class="order-complete-area bg-gray pt-50 pb-50">
                                                            <div class="container text-center">
                                                                <div class="order-complete-title">
                                                                    <h3>Trạng thái đơn hàng của bạn!</h3>
                                                                    <h6>Phí vận chuyển:@( item.ShipFee == 0 ? "chưa có sẽ xác nhận ở thanh toán lần 2" : $"{item.ShipFee:C0}") !</h6>
                                                                </div>
                                                                <div class="order-product-details">
                                                                    <div class="table-content table-responsive">
                                                                        <table class="table">
                                                                            <thead>
                                                                                <tr style="color:black">
                                                                                    <th>MÃ ĐƠN HÀNG</th>
                                                                                    <th>NGÀY</th>
                                                                                    <th>TỔNG</th>
                                                                                    <th>CHI PHÍ GIA TĂNG</th>
                                                                                    <th>PHÍ VẬN CHUYỂN</th>
                                                                                    <th>THANH TOÁN</th>
                                                                                    <th>SỐ TIỀN ĐÃ THANH TOÁN</th>
                                                                                    <th>CÒN NỢ</th>
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody>
                                                                                <tr>
                                                                                    <td>@item.OrderCode</td>
                                                                                    <td>@(item.CreatedTime != null ? item.CreatedTime.ToString("dd/MM/yyyy") : "N/A")</td>
                                                                                    <td>@(item.TotalAmount != null ? $"{item.TotalAmount:C0}" : "N/A")</td>
                                                                                    <td>@item.Costs.ToString("C0")</td>
                                                                                    <td>@item.ShipFee.ToString("C0")</td>
                                                                                    <td>@((item.Costs + item.TotalAmount + item.ShipFee).ToString("C0"))</td>
                                                                                    @if (item.Check1 == "SUCCESS")
                                                                                    {
                                                                                        <td>@((item.Costs + item.TotalAmount).ToString("C0"))</td>
                                                                                    }
                                                                                    @if (item.Check2 == "SUCCESS")
                                                                                    {
                                                                                        <td>@((item.Costs + item.TotalAmount + item.ShipFee).ToString("C0"))</td>
                                                                                    }
                                                                                    <td>@(((item.Costs + item.TotalAmount + item.ShipFee) - (item.Check1 == "SUCCESS" ? (item.Costs + item.TotalAmount) : (item.Check2 == "SUCCESS" ? item.Costs + item.TotalAmount + item.ShipFee : 0))).ToString("C0"))</td>
                                                                                </tr>
                                                                            </tbody>
                                                                            <thead>
                                                                                <tr>
                                                                                    <th>Sản phẩm</th>
                                                                                    <th>NGÀY</th>
                                                                                    <th>Đơn giá</th>
                                                                                    <th>Số lượng</th>
                                                                                    <th>Tổng</th>
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody>
                                                                                @foreach (var item2 in orderLines.EmptyIfNull())
                                                                                {
                                                                                    <tr>
                                                                                        <td>@item2.Title</td>
                                                                                        <td>@(item.CreatedTime != null ? item.CreatedTime.ToString("dd/MM/yyyy") : "N/A")</td>
                                                                                        <td>@(item2.Price != null ? $"{item2.Price:C0}" : "N/A")</td>
                                                                                        <td>@item2.Quantity</td>
                                                                                        <td>@(item2.RowTotal != null ? $"{item2.RowTotal:C0}" : "N/A")</td>
                                                                                    </tr>
                                                                                }
                                                                            </tbody>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    orderIndex++;
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="collapse col-lg-12 tab-pane" id="tab3" >
                                    <div class="row">
                                        <div class="user_acount">
                                            <form action="@NodeSlug?pass" id="myacount" method="post">
                                                <div class="row">
                                                    @AntiForgery.GetHtml()
                                                    <div class="col-lg-12 col-lg-12 mt-lg-4 mt-3">
                                                        <input type="password" id="password" name="@field.GetName(x=>x.PASSWORD)" placeholder="@(LangId == "vi" ? "Mật khẩu" : "Password" )" required>
                                                    </div>
                                                    <div class="col-lg-12 col-lg-12 mt-lg-4 mt-3">
                                                        <input type="password" id="confirm-password" name="@field.GetName(x=>x.ConfirmPassword)" placeholder="@(LangId == "vi" ? "Nhập lại mật khẩu" : "Password confirmation" )" required>
                                                    </div>
                                                    <div class="col-lg-12 col-lg-12 mt-lg-4 mt-3">
                                                        <input type="password" id="password" name="pass-new" placeholder="@(LangId == "vi" ? "Mật khẩu mới" : "Password New" )" required>
                                                    </div>
                                                </div>
                                                <div class="row mt-3 mb-4">
                                                    <div class="col-lg-12 text-left">
                                                        <div class="action_btns p-b-4">
                                                            <div class="one_half last">
                                                                <button class="btn btn_red" type="submit" style="left:0; margin-bottom:5%; width: 150px; color: white; padding: 10px 20px; border: none; text-align: center;">Lưu</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="container badge-light" style="background-color:#ffffff">
                            <div class="row">
                                <div class="col-lg-12 text-center">
                                    <h2>Vui lòng đăng nhập để sử dụng tính năng của tài khoản</h2>
                                </div>
                                <div class="col-lg-12 text-center">
                                    <img src="@Root.Config.Logo" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Thêm thư viện vnLocationSelector -->

    <script>
    $(document).ready(function () {
        console.log("jQuery loaded:", typeof $ !== "undefined");
        console.log("vnLocationSelector loaded:", typeof $.fn.vnLocationSelector !== "undefined");
        console.log("Container exists:", $(".location-selector").length);
        console.log("Saved Province:", "@Data.Customer.Provinces");
        console.log("Saved District:", "@Data.Customer.Districts");
        console.log("Saved Ward:", "@Data.Customer.wards");
        console.log("Saved ProvinceId:", "@Data.Customer.ProvincesId");
        console.log("Saved DistrictId:", "@Data.Customer.DistrictsId");
        console.log("Saved WardId:", "@Data.Customer.wardsId");
        $(".location-selector").vnLocationSelector({
            provinceId: "province",
            districtId: "districts",
            wardId: "wards",
            provinceNameId: "ProvinceName",
            districtNameId: "DistrictName",
            wardNameId: "WardName",
            savedProvince: "@Data.Customer.ProvincesId",
            savedDistrict: "@Data.Customer.DistrictsId",
            savedWard: "@Data.Customer.wardsId",
            savedProvinceName: "@Data.Customer.Provinces",
            savedDistrictName: "@Data.Customer.Districts",
            savedWardName: "@Data.Customer.wards"
        });

        // Hàm loại bỏ dấu tiếng Việt
        function removeAccents(str) {
            return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "").replace(/đ/g, "d").replace(/Đ/g, "D");
        }

        // Xử lý sự kiện click nút "Quét mã QR thanh toán"
        $(".generate-qr-btn").on("click", function () {
            var orderCode = $(this).data("order-code");
            var amount = Math.round($(this).data("amount")) || 0; // Làm tròn số tiền
            var customerName = $(this).data("customer-name") || "Khach Hang"; // Lấy tên khách hàng từ data-customer-name
            var orderIndex = $(this).closest(".order-summary").next(".modal").attr("id").replace("qrModal", "");
            var Payment = $(this).data("payment-name")

            // Tạo URL cho mã QR sử dụng vietqr.io
            var bankId = "970436"; // Techcombank
            var accountNo = "0891000652463"; // Số tài khoản
            var template = "compact"; // Mẫu QR
            var accountName = "Ngô Mạnh Cường"; // Tên chủ tài khoản
            var description = `${Payment}- ${removeAccents(customerName)} - ${orderCode}`; // Loại bỏ dấu trong tên

            var qrUrl = `https://img.vietqr.io/image/${bankId}-${accountNo}-${template}.png?amount=${amount}&addInfo=${encodeURIComponent(description)}&accountName=${encodeURIComponent(accountName)}`;

            // In URL ra console để kiểm tra
            console.log("QR URL:", qrUrl);

            // Hiển thị mã QR trong modal
            var qrContainer = $(`#qrCode${orderIndex}`);
            qrContainer.empty(); // Xóa mã QR cũ nếu có
            qrContainer.append(`<img src="${qrUrl}" alt="QR Code" style="max-width: 200px;" onerror="this.onerror=null; this.parentElement.innerHTML='<p>Lỗi: Không thể tải mã QR. Vui lòng thử lại.</p>';">`);
        });
    });

        document.querySelectorAll('.nav-link').forEach(button => {
            button.addEventListener('click', () => {
                const targetId = button.getAttribute('data-target');

                // Nếu không có targetId thì thoát
                if (!targetId) return;

                // Bỏ active1 khỏi tất cả nút
                document.querySelectorAll('.nav-link').forEach(btn => btn.classList.remove('active1'));

                // Bỏ active1 khỏi tất cả tab
                document.querySelectorAll('.tab-pane').forEach(tab => tab.classList.remove('active1'));

                // Thêm active1 cho nút hiện tại
                button.classList.add('active1');

                // Hiển thị tab tương ứng
                const tab = document.getElementById(targetId);
                if (tab) {
                    tab.classList.add('active1');
                } else {
                    console.error(`Không tìm thấy tab có id="${targetId}"`);
                }
            });
        });


    // Hàm xóa (giả lập)
    function delele(id) {
        console.log("Xóa sản phẩm với ID:", id);
        closeModal('xoa' + (id - 1));
    }

    // Xử lý preview ảnh
    function previewImage(event) {
        const preview = document.getElementById('preview');
        if (preview && event.target.files[0]) {
            preview.src = URL.createObjectURL(event.target.files[0]);
            preview.onload = () => URL.revokeObjectURL(preview.src);
        }
    }

    function previewImages(event) {
        const previewDiv = document.getElementById('image-preview2');
        if (previewDiv) {
            previewDiv.innerHTML = '';
            const files = event.target.files;
            for (let i = 0; i < files.length; i++) {
                const img = document.createElement('img');
                img.src = URL.createObjectURL(files[i]);
                img.className = 'img-fluid border-img-child';
                img.style.maxWidth = '100px';
                img.onload = () => URL.revokeObjectURL(img.src);
                const div = document.createElement('div');
                div.className = 'col-lg-2 col-2 p-1';
                div.appendChild(img);
                const btn = document.createElement('button');
                btn.className = 'btn btn-danger btn-sm mt-1';
                btn.innerText = 'Xóa';
                btn.onclick = () => removeImage(btn);
                div.appendChild(btn);
                previewDiv.appendChild(div);
            }
        }
    }

    function removeImage(button) {
        button.parentElement.remove();
    }
    </script>
    <script>
        $(document).on("click", ".view-images-btn", function () {
            const imagesAttr = $(this).attr("data-images");
            let images = [];

            try {
                if (imagesAttr && imagesAttr.trim().startsWith("[")) {
                    images = JSON.parse(imagesAttr);
                }
            } catch (e) {
                console.error("Invalid image JSON:", imagesAttr);
            }

            const modalId = $(this).attr("data-bs-target");
            const modalBody = $(modalId).find(".image-modal-body");
            modalBody.empty();

            if (images.length === 0) {
                modalBody.append("<p>Không có hình ảnh.</p>");
            } else {
                images.forEach(url => {
                    if (url) {
                        modalBody.append(`<img src="${url}" class="img-thumbnail m-2" style="max-width: 200px;" />`);
                    }
                });
            }
        });
    </script>
}